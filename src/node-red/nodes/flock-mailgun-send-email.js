
  /**
   * AUTOGENERATED. DO NOT CHANGE.
   */

  const axios = require('axios');
  const mustache = require('mustache');

  module.exports = function(RED) {
    function MailgunSendEmailNode(config) {
      RED.nodes.createNode(this, config);
      var node = this;

      node.on('input', function(msg) {
        // Retrieve the config node
        node.server = RED.nodes.getNode(config.server);
        if (!node.server) return node.error("Missing Flock config");

        const host = node.server.host
        const apiKey = node.server.key
        const url = host + '/mailgun/email/send?apikey=' + apiKey

        // Parse any params
        var mailgunApiKey = config.mailgunApiKey.indexOf("{{") != -1 ? mustache.render(config.mailgunApiKey, msg) : config.mailgunApiKey
        var mailgunDomain = config.mailgunDomain.indexOf("{{") != -1 ? mustache.render(config.mailgunDomain, msg) : config.mailgunDomain
        var to = config.to.indexOf("{{") != -1 ? mustache.render(config.to, msg) : config.to
        var from = config.from.indexOf("{{") != -1 ? mustache.render(config.from, msg) : config.from
        var subject = config.subject.indexOf("{{") != -1 ? mustache.render(config.subject, msg) : config.subject
        var text = config.text.indexOf("{{") != -1 ? mustache.render(config.text, msg) : config.text
        var recipientVariables = config.recipientVariables.indexOf("{{") != -1 ? mustache.render(config.recipientVariables, msg) : config.recipientVariables

        // Send the message
        axios.post(url, {
            config: {
              mailgunApiKey,
              mailgunDomain
            },
            payload: {
              to,
              from,
              subject,
              text,
              recipientVariables
            }
          })
          .then(function(result) {
            node.log(result.data);
          })
          .catch(function(error) {
            node.error(error);
            node.error(error.response.data);
          })
        
        node.send(msg);
      });
    }
    RED.nodes.registerType("flock-mailgun-send-email", MailgunSendEmailNode);
  }
  